version: "3"

services:
    app:
        build:
            context: .
            dockerfile: ./deployment/docker/php.dockerfile
            args:
                - HOST_UID=${UID:-1000}
                - HOST_GID=${GID:-1000}
        restart: unless-stopped
        container_name: dinacom24-app-container
        volumes:
            - .:/var/www
        networks:
            - app-network
        depends_on:
            - database

    database:
        image: mysql:latest
        container_name: dinacom24-mysql-container
        restart: always
        environment:
            MYSQL_DATABASE: dinacom24
            MYSQL_USER: dinacom24
            MYSQL_PASSWORD: dinacom24
            MYSQL_ROOT_PASSWORD: dinacom24
        volumes:
            - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
            - mysql_data:/var/lib/mysql
        networks:
            - app-network

    nginx:
        build:
            context: .
            dockerfile: ./deployment/docker/nginx.dockerfile
            args:
                - HOST_UID=${UID:-1000}
                - HOST_GID=${GID:-1000}
        container_name: dinacom24-nginx-container
        restart: always
        ports:
            - "9090:80"
        volumes:
            - .:/var/www
            - ./deployment/conf.d/nginx/default.conf:/etc/nginx/conf.d/default.conf
        networks:
            - app-network
        depends_on:
            - app

    cron:
        build:
            context: .
            dockerfile: ./deployment/docker/php.dockerfile
            args:
                - HOST_UID=${UID:-1000}
                - HOST_GID=${GID:-1000}
        container_name: dinacom24-cron-container
        restart: always
        volumes:
            - .:/var/www/
        depends_on:
            - app
        working_dir: /var/www/
        entrypoint: ["php", "/var/www/artisan", "schedule:work"]
        networks:
            - app-network

networks:
    app-network:
        driver: bridge
volumes:
    mysql_data:
